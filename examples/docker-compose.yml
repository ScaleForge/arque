version: "3.8"
services:
  # redpanda
  redpanda1:
    image: docker.redpanda.com/vectorized/redpanda:latest
    container_name: redpanda
    command: >
      redpanda start
      --smp 1
      --reserve-memory 0M
      --overprovisioned
      --set redpanda.empty_seed_starts_cluster=false
      --seeds "redpanda1:33145"
      --check=false
      --pandaproxy-addr INSIDE://0.0.0.0:28082,OUTSIDE://0.0.0.0:8082
      --advertise-pandaproxy-addr INSIDE://redpanda1:28082,OUTSIDE://localhost:8082
      --kafka-addr INSIDE://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      --advertise-kafka-addr INSIDE://redpanda1:29092,OUTSIDE://localhost:9092
      --rpc-addr 0.0.0.0:33145
      --advertise-rpc-addr redpanda1:33145
    ports:
      - 8081:8081
      - 8082:8082
      - 9092:9092
      - 9644:9644
    networks:
      - redpanda
  redpanda2:
    image: docker.redpanda.com/vectorized/redpanda:latest
    command: >
      redpanda start
      --smp 1
      --reserve-memory 0M
      --overprovisioned
      --set redpanda.empty_seed_starts_cluster=false
      --seeds "redpanda1:33145"
      --check=false
      --pandaproxy-addr INSIDE://0.0.0.0:28083,OUTSIDE://0.0.0.0:8083
      --advertise-pandaproxy-addr INSIDE://redpanda2:28083,OUTSIDE://localhost:8083
      --kafka-addr INSIDE://0.0.0.0:29093,OUTSIDE://0.0.0.0:9093
      --advertise-kafka-addr INSIDE://redpanda2:29093,OUTSIDE://localhost:9093
      --rpc-addr 0.0.0.0:33146
      --advertise-rpc-addr redpanda2:33146
    ports:
      - 8083:8083
      - 9093:9093
    networks:
      - redpanda
  redpanda3:
    image: docker.redpanda.com/vectorized/redpanda:latest
    command: >
      redpanda start
      --smp 1
      --reserve-memory 0M
      --overprovisioned
      --set redpanda.empty_seed_starts_cluster=false
      --seeds "redpanda1:33145"
      --check=false
      --pandaproxy-addr INSIDE://0.0.0.0:28084,OUTSIDE://0.0.0.0:8084
      --advertise-pandaproxy-addr INSIDE://redpanda3:28084,OUTSIDE://localhost:8084
      --kafka-addr INSIDE://0.0.0.0:29094,OUTSIDE://0.0.0.0:9094
      --advertise-kafka-addr INSIDE://redpanda3:29094,OUTSIDE://localhost:9094
      --rpc-addr 0.0.0.0:33147
      --advertise-rpc-addr redpanda3:33147
    ports:
      - 8084:8084
      - 9094:9094
    networks:
      - redpanda

  # mongo
  mongo1:
    container_name: mongo1
    image: mongo:5
    ports:
      - 27021:27021
    links:
      - mongo2
      - mongo3
    restart: always
    entrypoint:
      [
        "/usr/bin/mongod",
        "--bind_ip_all",
        "--replSet",
        "rs0",
        "--port",
        "27021",
      ]
    healthcheck:
      test: test $$(echo "rs.initiate({_id:'rs0',members:[{_id:0,host:\"mongo1:27021\"},{_id:1,host:\"mongo2:27022\"},{_id:2,host:\"mongo3:27023\"}]}).ok || rs.status().ok" | mongo --port 27021 --quiet) -eq 1
      interval: 10s
      start_period: 30s
  mongo2:
    container_name: mongo2
    image: mongo:5
    ports:
      - 27022:27022
    restart: always
    entrypoint:
      [
        "/usr/bin/mongod",
        "--bind_ip_all",
        "--replSet",
        "rs0",
        "--port",
        "27022",
      ]
  mongo3:
    container_name: mongo3
    image: mongo:5
    ports:
      - 27023:27023
    restart: always
    entrypoint:
      [
        "/usr/bin/mongod",
        "--bind_ip_all",
        "--replSet",
        "rs0",
        "--port",
        "27023",
      ]
networks:
  redpanda:
